ONNX Model Input Errors

Переведи на русский: The brain "deletes" old memories through a variety of complex mechanisms, and forgetting is now understood to be active process rather then just a passive failure of memory retention.


public static List<NamedOnnxValue> CreateUnetModelInput(Tensor<float> encoderHiddenStates, Tensor<float> sample, long timeStep)
{

    var input = new List<NamedOnnxValue> {
        NamedOnnxValue.CreateFromTensor("encoder_hidden_states", encoderHiddenStates),
        NamedOnnxValue.CreateFromTensor("sample", sample),
        NamedOnnxValue.CreateFromTensor("timestep", new DenseTensor<long>(new long[] { timeStep }, new int[] { 1 }))
    };

    return input;

}

Ошибка генерации ответа: [ErrorCode:RuntimeException] Non-zero status code returned while running Shape node. Name:'/Shape_1' Status Message: C:\a\_work\1\s\include\onnxruntime\core/framework/op_kernel_context.h:42 onnxruntime::OpKernelContext::Input Missing Input: attention_mask

The thread 5520 has exited with code 0 (0x0).
The program '[3540] UniAli.exe' has exited with code 1 (0x1).



Me

Привет. Хочу создать простейший AI Ассистент (UWP приложение) на базе крайне легковесной onnx модели Alibaba. Скачал и подключил её в Assets. Далее создал простейший UI. Стал тестрировать работу, и получил ошибку 
Ошибка генерации ответа: [ErrorCode:RuntimeException] Non-zero status code returned while running Shape node. Name:'/Shape_1' Status Message: C:\a\_work\1\s\include\onnxruntime\core/framework/op_kernel_context.h:42 onnxruntime::OpKernelContext::Input Missing Input: attention_mask

Похоже, я не разобрался, как устроен токенайзер, что такое shape или attention_mask. Помоги, пожалуйста, исправить баги

Revert
I'll help you create a simple AI assistant UWP app using an ONNX model. The error suggests there's an issue with the model's input requirements, particularly with the attention_mask input.

Let me first check your project structure to better understand what we're working with.

Searched filesystem
21 results
Searchedforfilesinc:\Users\Admin\source\repos\!WindSurf\UniAliwith extensionscs, xaml, onnx
Let me check your MainPage.xaml.cs to see how you're setting up the model and handling the input.

Analyzed
MainPage.xaml.cs#L1-200
Let me check the Tokenizer class to understand how the tokenization is implemented.

Analyzed
Tokenizer.cs#L1-200
I see the issue. The error occurs because the ONNX model expects both input_ids and attention_mask as inputs, but your code only provides input_ids. Let me help you fix this.

Here's what needs to be done:

Update the 
GenerateResponse
 method to include the attention_mask input
Ensure the tokenizer creates both input_ids and attention_mask with the correct shapes
Let me modify your code:

Edited
MainPage.xaml.cs
+22
-13
 153
Open diff
Let's update the tokenizer to handle input more effectively and ensure it works well with the model. I'll make some improvements to the Tokenizer class:

Edited
Tokenizer.cs
+87
-58
 1
Open diff
I've made several important changes to fix the issues with your AI assistant:

Fixed Model Inputs:
Added proper handling of both input_ids and attention_mask inputs that the model requires
Ensured tensors have the correct shape [batch_size, sequence_length]
Improved Tokenizer:
Enhanced text splitting to handle punctuation and whitespace better
Added case-insensitive token lookup
Properly handles padding with [PAD] tokens
Added helper methods for better text processing
Code Cleanup:
Removed commented-out code
Improved error handling
Added better comments in Russian
To use the updated code:

The tokenizer will now better handle different types of input text
The model will receive both required inputs: input_ids and attention_mask
The response generation should now work without the previous error
Try running the app now and entering some text. The model should process it without the previous error about missing attention_mask.

Note: The current tokenizer is still quite basic. For a production application, you might want to:

Use a proper tokenizer that matches the model's training (like BERT's WordPiece)
Add support for special tokens like [CLS] and [SEP] if your model expects them
Consider using a pre-trained tokenizer from a library like HuggingFace's Transformers
Would you like me to make any additional improvements to the code?